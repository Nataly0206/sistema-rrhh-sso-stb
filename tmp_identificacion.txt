    1 <?php
    2 
    3 namespace App\Http\Controllers;
    4 
    5 use Illuminate\Http\Request;
    6 use Illuminate\Support\Facades\DB;
    7 use Illuminate\Support\Arr;
    8 
    9 class IdentificacionRiesgosController extends Controller
   10 {
   11 
   12     public function store(Request $r)
   13     {
   14         // ===== 0) Validación mínima y normalización de tipos =====
   15         $r->validate([
   16         'id_puesto_trabajo_matriz' => ['required','integer','exists:puesto_trabajo_matriz,id_puesto_trabajo_matriz'],
   17         'ptm_num_empleados'        => ['nullable','integer','min:0'],
   18         'ptm_descripcion_general'  => ['nullable','string','max:1000'],
   19         'ptm_actividades_diarias'  => ['nullable','string','max:1000'],
   20         'ptm_objetivo_puesto'      => ['nullable','string','max:1000'],
   21         ], [], [
   22         'id_puesto_trabajo_matriz' => 'Puesto de Trabajo',
   23         ]);
   24 
   25         $idPuesto = (int) $r->input('id_puesto_trabajo_matriz');
   26 
   27         // Helpers
   28         // $cb: para checkboxes (arrays de valores), devuelve 1 si el key está presente
   29         $cb  = fn($arr, $key) => in_array($key, $arr ?? []) ? 1 : 0;
   30         // $yn: para selects si/no/na, devuelve 1 si es "si", 0 en cualquier otro caso
   31         $yn  = function ($arr, $key) {
   32             $v = $arr[$key] ?? null;
   33             return (is_string($v) && strtolower($v) === 'si') ? 1 : 0;
   34         };
   35         $rad = fn($arr, $i)   => $arr[$i]['estado'] ?? null;
   36         $obs = fn($arr, $i)   => $arr[$i]['obs']    ?? null;
   37 
   38         $inst    = $r->input('instalaciones', []);
   39         $maq     = $r->input('maq', []);
   40         $emer    = $r->input('emer', []);
   41         $ergo    = $r->input('ergo', []);
   42         $elecChk = $r->input('elec_chk', []);
   43         $caida   = $r->input('caida_nivel', []);
   44         $post    = $r->input('posturas', []);
   45         $fuego   = $r->input('riesgo_fuego', []);
   46         $alt     = $r->input('alturas', []);
   47         $quimReq = $r->input('quimicos', []);
   48 
   49         // ===== 1) Datos “maestros” para identificacion_riesgos =====
   50         $identData = [
   51             'id_puesto_trabajo_matriz'   => $idPuesto,
   52 
   53             // --- ESFUERZO FISICO ---
   54             'tipo_esfuerzo_cargar'       => 'Cargar',
   55             'descripcion_carga_cargar'   => $r->input('fisico_cargar_desc'),
   56             'equipo_apoyo_cargar'        => $r->input('fisico_cargar_equipo'),
   57             'duracion_carga_cargar'      => $r->input('fisico_cargar_duracion'),
   58             'distancia_carga_cargar'     => $r->input('fisico_cargar_distancia'),
   59             'epp_cargar'               => $r->input('fisico_cargar_epp'),
   60             'frecuencia_carga_cargar'    => $r->input('fisico_cargar_frecuencia'),
   61             'peso_cargar'                => $r->input('fisico_cargar_peso'),
   62 
   63             'tipo_esfuerzo_halar'        => 'Halar',
   64             'descripcion_carga_halar'    => $r->input('fisico_halar_desc'),
   65             'equipo_apoyo_halar'         => $r->input('fisico_halar_equipo'),
   66             'duracion_carga_halar'       => $r->input('fisico_halar_duracion'),
   67             'distancia_carga_halar'      => $r->input('fisico_halar_distancia'),
   68             'epp_halar'                => $r->input('fisico_halar_epp'),
   69             'frecuencia_carga_halar'     => $r->input('fisico_halar_frecuencia'),
   70             'peso_halar'                 => $r->input('fisico_halar_peso'),
   71 
   72             'tipo_esfuerzo_empujar'      => 'Empujar',
   73             'descripcion_carga_empujar'  => $r->input('fisico_empujar_desc'),
   74             'equipo_apoyo_empujar'       => $r->input('fisico_empujar_equipo'),
   75             'duracion_carga_empujar'     => $r->input('fisico_empujar_duracion'),
   76             'distancia_carga_empujar'    => $r->input('fisico_empujar_distancia'),
   77             'epp_empujar'              => $r->input('fisico_empujar_epp'),
   78             'frecuencia_carga_empujar'   => $r->input('fisico_empujar_frecuencia'),
   79             'peso_empujar'               => $r->input('fisico_empujar_peso'),
   80 
   81             'tipo_esfuerzo_sujetar'      => 'Sujetar',
   82             'descripcion_carga_sujetar'  => $r->input('fisico_sujetar_desc'),
   83             'equipo_apoyo_sujetar'       => $r->input('fisico_sujetar_equipo'),
   84             'duracion_carga_sujetar'     => $r->input('fisico_sujetar_duracion'),
   85             'distancia_carga_sujetar'    => $r->input('fisico_sujetar_distancia'),
   86             'epp_sujetar'              => $r->input('fisico_sujetar_epp'),
   87             'frecuencia_carga_sujetar'   => $r->input('fisico_sujetar_frecuencia'),
   88             'peso_sujetar'               => $r->input('fisico_sujetar_peso'),
   89 
   90             // --- VISUAL/RUIDO/TÉRMICO ---
   91             'tipo_esfuerzo_visual'         => $r->input('visual_tipo'),
   92             'nivel_mediciones_visual'      => $r->input('visual_lux'),
   93             'tiempo_exposicion_visual'     => $r->input('visual_tiempo'),
   94 
   95             'descripcion_ruido'            => $r->input('ruido_desc'),
   96             'nivel_mediciones_ruido'       => $r->input('ruido_db'),
   97             'tiempo_exposicion_ruido'      => $r->input('ruido_duracion'),
   98 
   99             'descripcion_temperatura'      => $r->input('termico_desc'),
  100             'nivel_mediciones_temperatura' => $r->input('termico_temp'),
  101             'tiempo_exposicion_temperatura'=> $r->input('termico_duracion'),
  102 
  103             // --- INSTALACIONES ---
  104             'paredes_muros_losas_trabes'     => $rad($inst,0),
  105             'paredes_muros_losas_trabes_obs' => $obs($inst,0),
  106             'pisos'                           => $rad($inst,1),
  107             'pisos_obs'                       => $obs($inst,1),
  108             'techos'                          => $rad($inst,2),
  109             'techos_obs'                      => $obs($inst,2),
  110             'puertas_ventanas'                => $rad($inst,3),
  111             'puertas_ventanas_obs'            => $obs($inst,3),
  112             'escaleras_rampas'                => $rad($inst,4),
  113             'escaleras_rampas_obs'            => $obs($inst,4),
  114             'anaqueles_estanterias'           => $rad($inst,5),
  115             'anaqueles_estanterias_obs'       => $obs($inst,5),
  116 
  117             // --- MAQUINARIA (estados + obs) ---
  118             'maquinaria_equipos'           => $rad($maq,0),
  119             'mantenimiento_preventivo'     => $rad($maq,1),
  120             'mantenimiento_correctivo'     => $rad($maq,2),
  121             'resguardos_guardas'           => $rad($maq,3),
  122             'conexiones_electricas'        => $rad($maq,4),
  123             'inspecciones_maquinaria'      => $rad($maq,5),
  124             'paros_emergencia'             => $rad($maq,6),
  125             'entrenamiento_maquinaria'     => $rad($maq,7),
  126             'epp_correspondiente'          => $rad($maq,8),
  127             'estado_herramientas'          => $rad($maq,9),
  128             'inspecciones_herramientas'    => $rad($maq,10),
  129             'almacenamiento_herramientas'  => $rad($maq,11),
  130 
  131             'maquinaria_equipos_obs'           => $obs($maq,0),
  132             'mantenimiento_preventivo_obs'     => $obs($maq,1),
  133             'mantenimiento_correctivo_obs'     => $obs($maq,2),
  134             'resguardos_guardas_obs'           => $obs($maq,3),
  135             'conexiones_electricas_obs'        => $obs($maq,4),
  136             'inspecciones_maquinaria_obs'      => $obs($maq,5),
  137             'paros_emergencia_obs'             => $obs($maq,6),
  138             'entrenamiento_maquinaria_obs'     => $obs($maq,7),
  139             'epp_correspondiente_obs'          => $obs($maq,8),
  140             'estado_herramientas_obs'          => $obs($maq,9),
  141             'inspecciones_herramientas_obs'    => $obs($maq,10),
  142             'almacenamiento_herramientas_obs'  => $obs($maq,11),
  143 
  144             // --- EMERGENCIA ---
  145             'rutas_evacuacion'        => $rad($emer,0),
  146             'extintores_mangueras'    => $rad($emer,1),
  147             'camillas'                => $rad($emer,2),
  148             'botiquin'                => $rad($emer,3),
  149             'simulacros'              => $rad($emer,4),
  150             'plan_evacuacion'         => $rad($emer,5),
  151             'actuacion_emergencia'    => $rad($emer,6),
  152             'alarmas_emergencia'      => $rad($emer,7),
  153             'alarmas_humo'            => $rad($emer,8),
  154             'lamparas_emergencia'     => $rad($emer,9),
  155 
  156             'rutas_evacuacion_obs'      => $obs($emer,0),
  157             'extintores_mangueras_obs'  => $obs($emer,1),
  158             'camillas_obs'              => $obs($emer,2),
  159             'botiquin_obs'              => $obs($emer,3),
  160             'simulacros_obs'            => $obs($emer,4),
  161             'plan_evacuacion_obs'       => $obs($emer,5),
  162             'actuacion_emergencia_obs'  => $obs($emer,6),
  163             'alarmas_emergencia_obs'    => $obs($emer,7),
  164             'alarmas_humo_obs'          => $obs($emer,8),
  165             'lamparas_emergencia_obs'   => $obs($emer,9),
  166 
  167             // --- FUEGO/EXPLOSIÓN (selects si/no/na -> tinyint) ---
  168             'sustancias_inflamables'        => $yn($fuego,'inflamables_area'),
  169             'ventilacion_natural'           => $yn($fuego,'ventilacion_extraccion'),
  170             'limpiezas_regulares'           => $yn($fuego,'limpieza_regulares'),
  171             'senalización_de_riesgos'       => $yn($fuego,'senalizacion_riesgo'),
  172             'fuentes_calor'                 => $yn($fuego,'focos_ignicion'),
  173             'maquinaria_friccion'           => $yn($fuego,'riesgo_electrico_friccion'),
  174             'trasiego_liquidos'             => $yn($fuego,'trasiego_combustibles'),
  175             'cilindros_presion'             => $yn($fuego,'cilindros_alta_presion'),
  176             'derrames_sustancias'           => $yn($fuego,'derrames_combustibles'),
  177 
  178             // --- ERGONÓMICO ---
  179             'movimientos_repetitivos' => $ergo[0]['resp'] ?? null,
  180             'posturas_forzadas'       => $ergo[1]['resp'] ?? null,
  181             'suficiente_espacio'      => $ergo[2]['resp'] ?? null,
  182             'elevacion_brazos'        => $ergo[3]['resp'] ?? null,
  183             'giros_muneca'            => $ergo[4]['resp'] ?? null,
  184             'inclinacion_espalda'     => $ergo[5]['resp'] ?? null,
  185             'herramienta_constante'   => $ergo[6]['resp'] ?? null,
  186             'herramienta_vibracion'   => $ergo[7]['resp'] ?? null,
  187 
  188             'movimientos_repetitivos_obs' => $ergo[0]['obs'] ?? null,
  189             'posturas_forzadas_obs'       => $ergo[1]['obs'] ?? null,
  190             'suficiente_espacio_obs'      => $ergo[2]['obs'] ?? null,
  191             'elevacion_brazos_obs'        => $ergo[3]['obs'] ?? null,
  192             'giros_muneca_obs'            => $ergo[4]['obs'] ?? null,
  193             'inclinacion_espalda_obs'     => $ergo[5]['obs'] ?? null,
  194             'herramienta_constante_obs'   => $ergo[6]['obs'] ?? null,
  195             'herramienta_vibracion_obs'   => $ergo[7]['obs'] ?? null,
  196 
  197             // --- POSTURAS ---
  198             'agachado'       => $cb($post,'agachado'),
  199             'rodillas'       => $cb($post,'de_rodillas'),
  200             'volteado'       => $cb($post,'volteado'),
  201             'parado'         => $cb($post,'parado'),
  202             'sentado'        => $cb($post,'sentado'),
  203             'arrastrandose'  => $cb($post,'arrastrandose'),
  204             'subiendo'       => $cb($post,'subiendo'),
  205             'balanceandose'  => $cb($post,'balanceandose'),
  206             'corriendo'      => $cb($post,'corriendo'),
  207             'empujando'      => $cb($post,'empujando'),
  208             'halando'        => $cb($post,'halando'),
  209             'girando'        => $cb($post,'girando'),
  210 
  211             // --- ALTURAS ---
  212             'altura'           => $alt['altura'] ?? null,
  213             'medios_anclaje'   => $alt['anclaje_seguro'] ?? null,
  214             'aviso_altura'     => $alt['aviso_trabajo_altura'] ?? null,
  215             'hoja_trabajo'     => $alt['firma_trabajo_seguro'] ?? null,
  216 
  217             // --- ELÉCTRICO ---
  218             'senalizacion_delimitacion'   => $r->input('elec_senalizacion'),
  219             'capacitacion_certificacion'  => $r->input('elec_capacitacion'),
  220             'alta_tension'                => $r->input('elec_alta_tension'),
  221             'trabajo_seguro_electrico'    => $r->input('elec_hoja_trabajo_seguro'),
  222             'zonas_estatica'              => $r->input('elec_estatica'),
  223             'ausencia_tension'            => $r->input('elec_ausencia_tension'),
  224             'bloqueo_tarjetas'            => $r->input('elec_bloqueo'),
  225             'aviso_trabajo_electrico'     => $r->input('elec_aviso'),
  226             'cables_ordenados'              => $cb($elecChk,'cables_ordenados'),
  227             'tomacorrientes'                => $cb($elecChk,'toma_lejos_humedad'),
  228             'cajas_interruptores'           => $cb($elecChk,'cajas_rotuladas_cerradas'),
  229             'extensiones'                   => $cb($elecChk,'buenas_condiciones'),
  230             'cables_aislamiento'            => $cb($elecChk,'aislamiento_ok'),
  231             'senalizacion_riesgo_electrico' => $cb($elecChk,'senalizacion_riesgo'),
  232             'observaciones_electrico'       => $r->input('elec_observaciones'),
  233 
  234             // --- CAÍDA MISMO NIVEL ---
  235             'pisos_adecuado'            => $cb($caida,'pisos_adecuados'),
  236             'vias_libres'               => $cb($caida,'vias_libres'),
  237             'rampas_identificados'      => $cb($caida,'rampas_identificadas'),
  238             'gradas_barandas'           => $cb($caida,'gradas_barandas'),
  239             'sistemas_antideslizante'   => $cb($caida,'antideslizantes'),
  240             'prevencion_piso_resbaloso' => $cb($caida,'senalizacion_piso_resbaloso'),
  241             'observaciones_caida_nivel' => $r->input('caida_observaciones'),
  242 
  243             // --- Firmas y fechas ---
  244             'evaluacion_realizada'        => $r->input('eval_realizada_por'),
  245             'fecha_evaluacion_realizada'  => $r->input('eval_realizada_fecha'),
  246             'evaluacion_revisada'         => $r->input('eval_revisada_por'),
  247             'fecha_evaluacion_revisada'   => $r->input('eval_revisada_fecha'),
  248             'fecha_proxima_evaluaci'      => $r->input('fecha_proxima_evaluacion'),
  249         ];
  250 
  251         // ===== 2) Helpers de mapeo de riesgos (por nombre) =====
  252         $normalize = function (?string $s) {
  253             $s = trim(mb_strtolower($s ?? '', 'UTF-8'));
  254             $s = preg_replace('/\s+/', ' ', $s);
  255             $s = strtr($s, ['á'=>'a','é'=>'e','í'=>'i','ó'=>'o','ú'=>'u','ü'=>'u','ñ'=>'n']);
  256             return $s;
  257         };
  258 
  259         $catalogo = DB::table('riesgo')->select('id_riesgo','nombre_riesgo')->get();
  260         $riesgoMap = [];
  261         $riesgoIdsValidos = [];
  262         foreach ($catalogo as $ri) {
  263             $rid = (int)$ri->id_riesgo;
  264             $riesgoMap[$normalize($ri->nombre_riesgo)] = $rid;
  265             $riesgoIdsValidos[$rid] = true;
  266         }
  267 
  268         // Detectar índices r{n}_* presentes en el request
  269         $indices = [];
  270         foreach (array_keys($r->all()) as $k) {
  271             if (preg_match('/^r(\d+)_/', $k, $m)) $indices[(int)$m[1]] = true;
  272         }
  273         $indices = array_keys($indices);
  274         sort($indices);
  275 
  276         // Validar que los nombres de peligro que llegan estén en catálogo
  277         $riesgosForm = $r->input('riesgos', []);
  278         $missing = [];
  279         foreach ($indices as $i) {
  280             $idFromForm = data_get($riesgosForm, "$i.id_riesgo");
  281             $idFromForm = ($idFromForm !== null && $idFromForm !== '') ? (int)$idFromForm : null;
  282             if ($idFromForm && isset($riesgoIdsValidos[$idFromForm])) {
  283                 continue; // válido por ID
  284             }
  285             $nombre = data_get($riesgosForm, "$i.nombre") ?? $r->input("r{$i}_riesgo_nombre");
  286             if ($nombre && isset($riesgoMap[$normalize($nombre)])) {
  287                 continue; // válido por nombre
  288             }
  289             if ($nombre) {
  290                 $missing[] = $nombre;
  291             }
  292         }
  293         if ($missing) {
  294           return back()
  295                 ->withErrors(['riesgos' => 'Riesgos no encontrados en catálogo: '.implode(', ', array_unique($missing))])
  296                 ->withInput();
  297         }
  298 
  299         // ===== 3) Transacción: guardar todo paso a paso con errores “etiquetados” =====
  300         DB::beginTransaction();
  301         try {
  302             // 3.0 Actualizar datos del puesto (PTM)
  303             DB::table('puesto_trabajo_matriz')
  304             ->where('id_puesto_trabajo_matriz', $idPuesto)
  305             ->update([
  306                 'num_empleados'       => $r->input('ptm_num_empleados'),
  307                 'descripcion_general' => $r->input('ptm_descripcion_general'),
  308                 'actividades_diarias' => $r->input('ptm_actividades_diarias'),
  309                 'objetivo_puesto'     => $r->input('ptm_objetivo_puesto'),
  310             ]);
  311 
  312             // 3.1 Identificación (upsert)
  313             DB::table('identificacion_riesgos')->updateOrInsert(
  314                 ['id_puesto_trabajo_matriz' => $idPuesto],
  315                 $identData
  316             );
  317 
  318             // 3.2 Químicos (reset + insert limpios)
  319             DB::table('quimico_puesto')->where('id_puesto_trabajo_matriz', $idPuesto)->delete();
  320 
  321             $toInsert = [];
  322             foreach ($quimReq as $qr) {
  323                 $qid = Arr::get($qr, 'id_quimico');
  324                 if ($qid === null || $qid === '') continue; // sólo los que tienen ID
  325                 $toInsert[] = [
  326                     'id_quimico'               => (int)$qid,
  327                     'id_puesto_trabajo_matriz' => $idPuesto,
  328                     'duracion_exposicion'      => Arr::get($qr, 'duracion'),
  329                     'frecuencia'               => Arr::get($qr, 'frecuencia'),
  330                 ];
  331             }
  332             if ($toInsert) {
  333                 // opcional: validar que existan los químicos referenciados
  334                 $allQ = DB::table('quimico')->whereIn('id_quimico', array_column($toInsert, 'id_quimico'))->pluck('id_quimico')->all();
  335                 $faltantes = array_diff(array_column($toInsert, 'id_quimico'), $allQ);
  336                 if ($faltantes) {
  337                     throw new \RuntimeException('PASO 2 (químicos): id_quimico inexistente: '.implode(', ', $faltantes));
  338                 }
  339                 DB::table('quimico_puesto')->insert($toInsert);
  340             }
  341 
  342             // 3.3 Riesgo_valor (SI/NO + obs)
  343             foreach ($indices as $i) {
  344                 // Preferir ID si viene desde el formulario; si no, usar nombre
  345                 $riesgoId = null;
  346                 $idFromForm = data_get($riesgosForm, "$i.id_riesgo");
  347                 $idFromForm = ($idFromForm !== null && $idFromForm !== '') ? (int)$idFromForm : null;
  348                 if ($idFromForm && isset($riesgoIdsValidos[$idFromForm])) {
  349                     $riesgoId = $idFromForm;
  350                 } else {
  351                     $nombre   = data_get($riesgosForm, "$i.nombre") ?? $r->input("r{$i}_riesgo_nombre");
  352                     if ($nombre) {
  353                         $riesgoId = $riesgoMap[$normalize($nombre)] ?? null;
  354                     }
  355                 }
  356                 if (!$riesgoId) continue;
  357 
  358                 $valor = $r->input("r{$i}_aplica");
  359                 $valor = $valor !== null ? strtoupper($valor) : null; // 'SI'/'NO'/null
  360                 $obsRv = $r->input("r{$i}_obs");
  361 
  362                 // Guarda aunque vengan null (con updateOrInsert)
  363                 DB::table('riesgo_valor')->updateOrInsert(
  364                       [
  365                         'id_puesto_trabajo_matriz' => $idPuesto,
  366                         'id_riesgo'                => $riesgoId,
  367                     ],
  368                     [
  369                         'valor'         => $valor,
  370                         'observaciones' => $obsRv ?: null,
  371                     ]
  372                 );
  373             }
  374 
  375             // 3.4 Evaluacion_riesgo (prob, cons, nivel) si los 3 IDs vienen
  376             foreach ($indices as $i) {
  377                 $riesgoId = null;
  378                 $idFromForm = data_get($riesgosForm, "$i.id_riesgo");
  379                 $idFromForm = ($idFromForm !== null && $idFromForm !== '') ? (int)$idFromForm : null;
  380                 if ($idFromForm && isset($riesgoIdsValidos[$idFromForm])) {
  381                     $riesgoId = $idFromForm;
  382                 } else {
  383                     $nombre   = data_get($riesgosForm, "$i.nombre") ?? $r->input("r{$i}_riesgo_nombre");
  384                     if ($nombre) {
  385                         $riesgoId = $riesgoMap[$normalize($nombre)] ?? null;
  386                     }
  387                 }
  388                 if (!$riesgoId) continue;
  389 
  390                 $probId  = $r->input("r{$i}_id_probabilidad");
  391                 $consId  = $r->input("r{$i}_id_consecuencia");
  392                 $nivelId = $r->input("r{$i}_id_nivel_riesgo");
  393 
  394                 $probId  = ($probId  !== null && $probId  !== '') ? (int)$probId  : null;
  395                 $consId  = ($consId  !== null && $consId  !== '') ? (int)$consId  : null;
  396                 $nivelId = ($nivelId !== null && $nivelId !== '') ? (int)$nivelId : null;
  397 
  398                 if ($probId && $consId && $nivelId) {
  399                     DB::table('evaluacion_riesgo')->updateOrInsert(
  400                         [
  401                             'id_puesto_trabajo_matriz' => $idPuesto,
  402                             'id_riesgo'                => $riesgoId,
  403                         ],
  404                         [
  405                             'id_probabilidad' => $probId,
  406                             'id_consecuencia' => $consId,
  407                             'id_nivel_riesgo' => $nivelId,
  408                         ]
  409                     );
  410                 }
  411             }
  412 
  413             DB::commit();
  414             return back()->with('success', 'Se guardó correctamente (Puesto #'.$idPuesto.')');
  415         } catch (\Throwable $e) {
  416             DB::rollBack();
  417             return back()->withErrors(['save' => $e->getMessage()])->withInput();
  418         }
  419     }
  420 
  421     public function fetch(int $id)
  422 {
  423     // Puesto
  424     $puesto = DB::table('puesto_trabajo_matriz')
  425         ->where('id_puesto_trabajo_matriz', $id)
  426         ->first();
  427 
  428     if (!$puesto) {
  429         return response()->json(['ok' => false, 'error' => 'Puesto no encontrado'], 404);
  430     }
  431 
  432     // Identificación (puede no existir si nunca se guardó)
  433     $ident = DB::table('identificacion_riesgos')
  434         ->where('id_puesto_trabajo_matriz', $id)
  435         ->first();
  436 
  437     // Químicos (join para traer nombre visible)
  438     $quimicos = DB::table('quimico_puesto as qp')
  439         ->join('quimico as q', 'q.id_quimico', '=', 'qp.id_quimico')
  440         ->where('qp.id_puesto_trabajo_matriz', $id)
  441         ->selectRaw('qp.id_quimico, q.nombre_comercial as nombre, qp.duracion_exposicion as duracion, qp.frecuencia')
  442         ->get();
  443 
  444     // Riesgo_valor (SI/NO + obs) por id_riesgo
  445     $riesgoValor = DB::table('riesgo_valor as rv')
  446         ->join('riesgo as r', 'r.id_riesgo', '=', 'rv.id_riesgo')
  447         ->where('rv.id_puesto_trabajo_matriz', $id)
  448         ->selectRaw('rv.id_riesgo, r.nombre_riesgo as nombre, rv.valor, rv.observaciones as obs')
  449         ->get()
  450         ->mapWithKeys(function ($row) {
  451             return [
  452                 (int)$row->id_riesgo => [
  453                     'valor' => $row->valor ? strtolower($row->valor) : null, // "si"|"no"|null
  454                     'obs'   => $row->obs,
  455                     'nombre'=> $row->nombre,
  456                 ]
  457             ];
  458         });
  459 
  460     // Evaluacion_riesgo (ids + etiquetas) por id_riesgo
  461     $eval = DB::table('evaluacion_riesgo as e')
  462         ->leftJoin('probabilidad as p', 'p.id_probabilidad', '=', 'e.id_probabilidad')
  463         ->leftJoin('consecuencia as c', 'c.id_consecuencia', '=', 'e.id_consecuencia')
  464         ->leftJoin('nivel_riesgo as n', 'n.id_nivel_riesgo', '=', 'e.id_nivel_riesgo')
  465         ->where('e.id_puesto_trabajo_matriz', $id)
  466         ->selectRaw('e.id_riesgo, e.id_probabilidad, COALESCE(p.probabilidad,"") as prob_label,
  467                      e.id_consecuencia, COALESCE(c.consecuencia,"") as cons_label,
  468                      e.id_nivel_riesgo, COALESCE(n.nivel_riesgo,"") as nivel_label')
  469         ->get()
  470         ->mapWithKeys(function ($row) {
  471             return [
  472                 (int)$row->id_riesgo => [
  473                     'id_probabilidad' => (int)$row->id_probabilidad,
  474                     'prob_label'      => $row->prob_label,
  475                     'id_consecuencia' => (int)$row->id_consecuencia,
  476                     'cons_label'      => $row->cons_label,
  477                     'id_nivel_riesgo' => (int)$row->id_nivel_riesgo,
  478                     'nivel_label'     => $row->nivel_label,
  479                 ]
  480             ];
  481         });
  482 
  483     // Helper si/no/na -> para selects
  484     $inv = function ($v) {
  485         if ($v === null) return '';
  486         if ((string)$v === '1') return 'si';
  487         if ((string)$v === '0') return 'no';
  488         return ''; // N/A o no definido
  489     };
  490 
  491     // Construimos payload en forma “amigable” para el front
  492     $payload = [
  493         'ok'      => true,
  494         'puesto'  => [
  495             'departamento'          => $puesto->departamento ?? '',
  496             'ptm_num_empleados'     => $puesto->num_empleados ?? null,
  497             'ptm_descripcion_general'=> $puesto->descripcion_general ?? '',
  498             'ptm_actividades_diarias'=> $puesto->actividades_diarias ?? '',
  499             'ptm_objetivo_puesto'   => $puesto->objetivo_puesto ?? '',
  500         ],
  501         'ident'   => $ident ? [
  502             // ESFUERZO FÍSICO
  503             'fisico' => [
  504                 'cargar'  => [
  505                     'desc'      => $ident->descripcion_carga_cargar ?? '',
  506                     'equipo'    => $ident->equipo_apoyo_cargar ?? '',
  507                     'duracion'  => $ident->duracion_carga_cargar ?? '',
  508                     'distancia' => $ident->distancia_carga_cargar ?? '',
  509                     'epp'       => $ident->epp_cargar ?? '',
  510                     'frecuencia'=> $ident->frecuencia_carga_cargar ?? '',
  511                     'peso'      => $ident->peso_cargar ?? '',
  512                 ],
  513                 'halar'   => [
  514                     'desc'      => $ident->descripcion_carga_halar ?? '',
  515                     'equipo'    => $ident->equipo_apoyo_halar ?? '',
  516                     'duracion'  => $ident->duracion_carga_halar ?? '',
  517                     'distancia' => $ident->distancia_carga_halar ?? '',
  518                     'epp'       => $ident->epp_halar ?? '',
  519                     'frecuencia'=> $ident->frecuencia_carga_halar ?? '',
  520                     'peso'      => $ident->peso_halar ?? '',
  521                 ],
  522                 'empujar' => [
  523                     'desc'      => $ident->descripcion_carga_empujar ?? '',
  524                     'equipo'    => $ident->equipo_apoyo_empujar ?? '',
  525                     'duracion'  => $ident->duracion_carga_empujar ?? '',
  526                     'distancia' => $ident->distancia_carga_empujar ?? '',
  527                     'epp'       => $ident->epp_empujar ?? '',
  528                     'frecuencia'=> $ident->frecuencia_carga_empujar ?? '',
  529                     'peso'      => $ident->peso_empujar ?? '',
  530                 ],
  531                 'sujetar' => [
  532                     'desc'      => $ident->descripcion_carga_sujetar ?? '',
  533                     'equipo'    => $ident->equipo_apoyo_sujetar ?? '',
  534                     'duracion'  => $ident->duracion_carga_sujetar ?? '',
  535                     'distancia' => $ident->distancia_carga_sujetar ?? '',
  536                     'epp'       => $ident->epp_sujetar ?? '',
  537                     'frecuencia'=> $ident->frecuencia_carga_sujetar ?? '',
  538                     'peso'      => $ident->peso_sujetar ?? '',
  539                 ],
  540             ],
  541             // VISUAL/RUIDO/TÉRMICO
  542             'visual' => [
  543                 'tipo'   => $ident->tipo_esfuerzo_visual ?? '',
  544                 'tiempo' => $ident->tiempo_exposicion_visual ?? '',
  545             ],
  546             'ruido'  => [
  547                 'desc'   => $ident->descripcion_ruido ?? '',
  548                 'tiempo' => $ident->tiempo_exposicion_ruido ?? '',
  549             ],
  550             'termico'=> [
  551                 'desc'   => $ident->descripcion_temperatura ?? '',
  552                 'tiempo' => $ident->tiempo_exposicion_temperatura ?? '',
  553             ],
  554             // INSTALACIONES (A/NA/N/A)
  555             'instalaciones' => [
  556                 ['estado'=>$ident->paredes_muros_losas_trabes ?? '', 'obs'=>$ident->paredes_muros_losas_trabes_obs ?? ''],
  557                 ['estado'=>$ident->pisos ?? '', 'obs'=>$ident->pisos_obs ?? ''],
  558                 ['estado'=>$ident->techos ?? '', 'obs'=>$ident->techos_obs ?? ''],
  559                 ['estado'=>$ident->puertas_ventanas ?? '', 'obs'=>$ident->puertas_ventanas_obs ?? ''],
  560                 ['estado'=>$ident->escaleras_rampas ?? '', 'obs'=>$ident->escaleras_rampas_obs ?? ''],
  561                 ['estado'=>$ident->anaqueles_estanterias ?? '', 'obs'=>$ident->anaqueles_estanterias_obs ?? ''],
  562             ],
  563             // MAQUINARIA (12) estados y obs
  564             'maq' => [
  565                 ['estado'=>$ident->maquinaria_equipos ?? '',           'obs'=>$ident->maquinaria_equipos_obs ?? ''],
  566                 ['estado'=>$ident->mantenimiento_preventivo ?? '',     'obs'=>$ident->mantenimiento_preventivo_obs ?? ''],
  567                 ['estado'=>$ident->mantenimiento_correctivo ?? '',     'obs'=>$ident->mantenimiento_correctivo_obs ?? ''],
  568                 ['estado'=>$ident->resguardos_guardas ?? '',           'obs'=>$ident->resguardos_guardas_obs ?? ''],
  569                 ['estado'=>$ident->conexiones_electricas ?? '',        'obs'=>$ident->conexiones_electricas_obs ?? ''],
  570                 ['estado'=>$ident->inspecciones_maquinaria ?? '',      'obs'=>$ident->inspecciones_maquinaria_obs ?? ''],
  571                 ['estado'=>$ident->paros_emergencia ?? '',             'obs'=>$ident->paros_emergencia_obs ?? ''],
  572                 ['estado'=>$ident->entrenamiento_maquinaria ?? '',     'obs'=>$ident->entrenamiento_maquinaria_obs ?? ''],
  573                 ['estado'=>$ident->epp_correspondiente ?? '',          'obs'=>$ident->epp_correspondiente_obs ?? ''],
  574                 ['estado'=>$ident->estado_herramientas ?? '',          'obs'=>$ident->estado_herramientas_obs ?? ''],
  575                 ['estado'=>$ident->inspecciones_herramientas ?? '',    'obs'=>$ident->inspecciones_herramientas_obs ?? ''],
  576                 ['estado'=>$ident->almacenamiento_herramientas ?? '',  'obs'=>$ident->almacenamiento_herramientas_obs ?? ''],
  577             ],
  578             // EMERGENCIA (10)
  579             'emer' => [
  580                 ['estado'=>$ident->rutas_evacuacion ?? '',   'obs'=>$ident->rutas_evacuacion_obs ?? ''],
  581                 ['estado'=>$ident->extintores_mangueras ?? '','obs'=>$ident->extintores_mangueras_obs ?? ''],
  582                 ['estado'=>$ident->camillas ?? '',            'obs'=>$ident->camillas_obs ?? ''],
  583                 ['estado'=>$ident->botiquin ?? '',            'obs'=>$ident->botiquin_obs ?? ''],
  584                 ['estado'=>$ident->simulacros ?? '',          'obs'=>$ident->simulacros_obs ?? ''],
  585                 ['estado'=>$ident->plan_evacuacion ?? '',     'obs'=>$ident->plan_evacuacion_obs ?? ''],
  586                 ['estado'=>$ident->actuacion_emergencia ?? '','obs'=>$ident->actuacion_emergencia_obs ?? ''],
  587                 ['estado'=>$ident->alarmas_emergencia ?? '',  'obs'=>$ident->alarmas_emergencia_obs ?? ''],
  588                 ['estado'=>$ident->alarmas_humo ?? '',        'obs'=>$ident->alarmas_humo_obs ?? ''],
  589                 ['estado'=>$ident->lamparas_emergencia ?? '', 'obs'=>$ident->lamparas_emergencia_obs ?? ''],
  590             ],
  591             // FUEGO/EXPLOSIÓN (selects si/no/na → 1/0/null en DB)
  592             'fuego' => [
  593                 'inflamables_area'      => $inv($ident->sustancias_inflamables),
  594                 'ventilacion_extraccion'=> $inv($ident->ventilacion_natural),
  595                 'limpieza_regulares'    => $inv($ident->limpiezas_regulares),
  596                 'senalizacion_riesgo'   => $inv($ident->senalizacion_de_riesgos),
  597                 'focos_ignicion'        => $inv($ident->fuentes_calor),
  598                 'riesgo_electrico_friccion'=> $inv($ident->maquinaria_friccion),
  599                 'trasiego_combustibles' => $inv($ident->trasiego_liquidos),
  600                 'cilindros_alta_presion'=> $inv($ident->cilindros_presion),
  601                 'derrames_combustibles' => $inv($ident->derrames_sustancias),
  602             ],
  603             // ERGONÓMICO (8)
  604             'ergo' => [
  605                 ['resp'=>$ident->movimientos_repetitivos ?? null, 'obs'=>$ident->movimientos_repetitivos_obs ?? ''],
  606                 ['resp'=>$ident->posturas_forzadas ?? null,       'obs'=>$ident->posturas_forzadas_obs ?? ''],
  607                 ['resp'=>$ident->suficiente_espacio ?? null,      'obs'=>$ident->suficiente_espacio_obs ?? ''],
  608                 ['resp'=>$ident->elevacion_brazos ?? null,        'obs'=>$ident->elevacion_brazos_obs ?? ''],
  609                 ['resp'=>$ident->giros_muneca ?? null,            'obs'=>$ident->giros_muneca_obs ?? ''],
  610                 ['resp'=>$ident->inclinacion_espalda ?? null,     'obs'=>$ident->inclinacion_espalda_obs ?? ''],
  611                 ['resp'=>$ident->herramienta_constante ?? null,   'obs'=>$ident->herramienta_constante_obs ?? ''],
  612                 ['resp'=>$ident->herramienta_vibracion ?? null,   'obs'=>$ident->herramienta_vibracion_obs ?? ''],
  613             ],
  614             // POSTURAS (checkboxes)
  615             'posturas' => [
  616                 'agachado'        => (int)($ident->agachado ?? 0) === 1,
  617                 'de_rodillas'     => (int)($ident->rodillas ?? 0) === 1,
  618                 'volteado'        => (int)($ident->volteado ?? 0) === 1,
  619                 'parado'          => (int)($ident->parado ?? 0) === 1,
  620                 'sentado'         => (int)($ident->sentado ?? 0) === 1,
  621                 'arrastrandose'   => (int)($ident->arrastrandose ?? 0) === 1,
  622                 'subiendo'        => (int)($ident->subiendo ?? 0) === 1,
  623                 'balanceandose'   => (int)($ident->balanceandose ?? 0) === 1,
  624                 'corriendo'       => (int)($ident->corriendo ?? 0) === 1,
  625                 'empujando'       => (int)($ident->empujando ?? 0) === 1,
  626                 'halando'         => (int)($ident->halando ?? 0) === 1,
  627                 'girando'         => (int)($ident->girando ?? 0) === 1,
  628             ],
  629             // ALTURAS
  630             'alturas' => [
  631                 'altura'               => $ident->altura ?? '',
  632                 'anclaje_seguro'       => $ident->medios_anclaje ?? '',
  633                 'aviso_trabajo_altura' => $ident->aviso_altura ?? '',
  634                 'firma_trabajo_seguro' => $ident->hoja_trabajo ?? '',
  635             ],
  636             // ELÉCTRICO (selects y checks)
  637             'elec_select' => [
  638                 'elec_senalizacion'        => $ident->senalizacion_delimitacion ?? '',
  639                 'elec_capacitacion'        => $ident->capacitacion_certificacion ?? '',
  640                 'elec_alta_tension'        => $ident->alta_tension ?? '',
  641                 'elec_hoja_trabajo_seguro' => $ident->trabajo_seguro_electrico ?? '',
  642                 'elec_estatica'            => $ident->zonas_estatica ?? '',
  643                 'elec_ausencia_tension'    => $ident->ausencia_tension ?? '',
  644                 'elec_bloqueo'             => $ident->bloqueo_tarjetas ?? '',
  645                 'elec_aviso'               => $ident->aviso_trabajo_electrico ?? '',
  646                 'elec_observaciones'       => $ident->observaciones_electrico ?? '',
  647             ],
  648             'elec_chk' => [
  649                 'cables_ordenados'   => (int)($ident->cables_ordenados ?? 0) === 1,
  650                 'toma_lejos_humedad' => (int)($ident->tomacorrientes ?? 0) === 1,
  651                 'cajas_rotuladas_cerradas'=> (int)($ident->cajas_interruptores ?? 0) === 1,
  652                 'buenas_condiciones' => (int)($ident->extensiones ?? 0) === 1,
  653                 'aislamiento_ok'     => (int)($ident->cables_aislamiento ?? 0) === 1,
  654                 'senalizacion_riesgo'=> (int)($ident->senalizacion_riesgo_electrico ?? 0) === 1,
  655             ],
  656             // CAÍDA MISMO NIVEL
  657             'caida' => [
  658                 'pisos_adecuados'        => (int)($ident->pisos_adecuado ?? 0) === 1,
  659                 'vias_libres'            => (int)($ident->vias_libres ?? 0) === 1,
  660                 'rampas_identificadas'   => (int)($ident->rampas_identificados ?? 0) === 1,
  661                 'gradas_barandas'        => (int)($ident->gradas_barandas ?? 0) === 1,
  662                 'antideslizantes'        => (int)($ident->sistemas_antideslizante ?? 0) === 1,
  663                 'senalizacion_piso_resbaloso'=> (int)($ident->prevencion_piso_resbaloso ?? 0) === 1,
  664                 'obs'                    => $ident->observaciones_caida_nivel ?? '',
  665             ],
  666             // Firmas y fechas
  667             'firmas' => [
  668                 'eval_realizada_por'      => $ident->evaluacion_realizada ?? '',
  669                 'eval_realizada_fecha'    => $ident->fecha_evaluacion_realizada ?? null,
  670                 'eval_revisada_por'       => $ident->evaluacion_revisada ?? '',
  671                 'eval_revisada_fecha'     => $ident->fecha_evaluacion_revisada ?? null,
  672                 'fecha_proxima_evaluacion'=> $ident->fecha_proxima_evaluaci ?? null,
  673             ],
  674         ] : null,
  675         'quimicos'        => $quimicos,
  676         'riesgo_valor'    => $riesgoValor,
  677         'evaluacion_riesgo'=> $eval,
  678     ];
  679 
  680     return response()->json($payload);
  681 }
  682 }
